import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

public class Main
{

    static BufferedReader cin = null;
    static PrintWriter out = new PrintWriter(System.out);

    static int n, m;
    static int[][] memo;
    static boolean[][] vst;

    public static void main(String[] args) throws Exception
    {
	cin = new BufferedReader(new InputStreamReader(System.in));
	String s = cin.readLine();
	String[] sa = s.split(" ");
	n = Integer.parseInt(sa[0]);
	m = Integer.parseInt(sa[1]);
	memo = new int[n + 1][m + 1];
	vst = new boolean[n + 1][m + 1];
	String table = "1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 2 2 3 3 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 17 18 18 19 19 20 20 21 21 22 22 23 23 24 24 25 25 1 1 2 3 4 5 7 8 10 12 14 16 19 21 24 27 30 33 37 40 44 48 52 56 61 65 70 75 80 85 91 96 102 108 114 120 127 133 140 147 154 161 169 176 184 192 200 208 217 225 1 1 2 3 5 6 9 11 15 18 23 27 34 39 47 54 64 72 84 94 108 120 136 150 169 185 206 225 249 270 297 321 351 378 411 441 478 511 551 588 632 672 720 764 816 864 920 972 1033 1089 1 1 2 3 5 7 10 13 18 23 30 37 47 57 70 84 101 119 141 164 192 221 255 291 333 377 427 480 540 603 674 748 831 918 1014 1115 1226 1342 1469 1602 1747 1898 2062 2233 2418 2611 2818 3034 3266 3507 1 1 2 3 5 7 11 14 20 26 35 44 58 71 90 110 136 163 199 235 282 331 391 454 532 612 709 811 931 1057 1206 1360 1540 1729 1945 2172 2432 2702 3009 3331 3692 4070 4494 4935 5427 5942 6510 7104 7760 8442 1 1 2 3 5 7 11 15 21 28 38 49 65 82 105 131 164 201 248 300 364 436 522 618 733 860 1009 1175 1367 1579 1824 2093 2400 2738 3120 3539 4011 4526 5102 5731 6430 7190 8033 8946 9953 11044 12241 13534 14950 16475 1 1 2 3 5 7 11 15 22 29 40 52 70 89 116 146 186 230 288 352 434 525 638 764 919 1090 1297 1527 1801 2104 2462 2857 3319 3828 4417 5066 5812 6630 7564 8588 9749 11018 12450 14012 15765 17674 19805 22122 24699 27493 1 1 2 3 5 7 11 15 22 30 41 54 73 94 123 157 201 252 318 393 488 598 732 887 1076 1291 1549 1845 2194 2592 3060 3589 4206 4904 5708 6615 7657 8824 10156 11648 13338 15224 17354 19720 22380 25331 28629 32278 36347 40831 1 1 2 3 5 7 11 15 22 30 42 55 75 97 128 164 212 267 340 423 530 653 807 984 1204 1455 1761 2112 2534 3015 3590 4242 5013 5888 6912 8070 9418 10936 12690 14663 16928 19466 22367 25608 29292 33401 38047 43214 49037 55494 1 1 2 3 5 7 11 15 22 30 42 56 76 99 131 169 219 278 355 445 560 695 863 1060 1303 1586 1930 2331 2812 3370 4035 4802 5708 6751 7972 9373 11004 12866 15021 17475 20298 23501 27169 31316 36043 41373 47420 54218 61903 70515 1 1 2 3 5 7 11 15 22 30 42 56 77 100 133 172 224 285 366 460 582 725 905 1116 1380 1686 2063 2503 3036 3655 4401 5262 6290 7476 8877 10489 12384 14552 17084 19978 23334 27156 31570 36578 42333 48849 56297 64707 74287 85067 1 1 2 3 5 7 11 15 22 30 42 56 77 101 134 174 227 290 373 471 597 747 935 1158 1436 1763 2164 2637 3210 3882 4691 5635 6761 8073 9624 11424 13542 15988 18847 22142 25971 30366 35452 41269 47968 55610 64370 74331 85711 98609 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 175 229 293 378 478 608 762 957 1188 1478 1819 2241 2738 3345 4057 4920 5928 7139 8551 10232 12186 14499 17176 20325 23961 28212 33104 38797 45326 52888 61538 71509 82882 95943 110795 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 230 295 381 483 615 773 972 1210 1508 1861 2297 2815 3446 4192 5096 6158 7434 8932 10715 12801 15272 18148 21535 25469 30073 35401 41612 48772 57080 66634 77667 90316 104875 121510 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 296 383 486 620 780 983 1225 1530 1891 2339 2871 3523 4293 5231 6334 7665 9228 11098 13287 15892 18928 22518 26694 31603 37292 43951 51643 60603 70927 82898 96650 112540 130738 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 384 488 623 785 990 1236 1545 1913 2369 2913 3579 4370 5332 6469 7841 9459 11395 13671 16380 19551 23303 27684 32839 38837 45864 54012 63516 74506 87268 101982 119009 138579 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 489 625 788 995 1243 1556 1928 2391 2943 3621 4426 5409 6570 7976 9635 11626 13968 16765 20040 23928 28472 33834 40080 47420 55940 65907 77449 90889 106408 124418 145149 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 626 790 998 1248 1563 1939 2406 2965 3651 4468 5465 6647 8077 9770 11802 14199 17062 20425 24418 29098 34624 41078 48668 57503 67846 79855 93854 110059 128886 150614 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 791 1000 1251 1568 1946 2417 2980 3673 4498 5507 6703 8154 9871 11937 14375 17293 20722 24803 29588 35251 41869 49668 58754 69414 81801 96271 113039 132559 155112 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1001 1253 1571 1951 2424 2991 3688 4520 5537 6745 8210 9948 12038 14510 17469 20953 25100 29973 35741 42496 50460 59755 70667 83372 98222 115463 135550 158800 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1254 1573 1954 2429 2998 3699 4535 5559 6775 8252 10004 12115 14611 17604 21129 25331 30270 36126 42986 51087 60547 71669 84626 99795 117417 137979 161798 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1574 1956 2432 3003 3706 4546 5574 6797 8282 10046 12171 14688 17705 21264 25507 30501 36423 43371 51577 61174 72461 85628 101050 118991 139935 164230 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1957 2434 3006 3711 4553 5585 6812 8304 10076 12213 14744 17782 21365 25642 30677 36654 43668 51962 61664 73088 86420 102052 120246 141510 166187 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2435 3008 3714 4558 5592 6823 8319 10098 12243 14786 17838 21442 25743 30812 36830 43899 52259 62049 73578 87047 102844 121248 142765 167762 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3009 3716 4561 5597 6830 8330 10113 12265 14816 17880 21498 25820 30913 36965 44075 52490 62346 73963 87537 103471 122040 143767 169017 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3717 4563 5600 6835 8337 10124 12280 14838 17910 21540 25876 30990 37066 44210 52666 62577 74260 87922 103961 122667 144559 170019 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4564 5602 6838 8342 10131 12291 14853 17932 21570 25918 31046 37143 44311 52801 62753 74491 88219 104346 123157 145186 170811 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5603 6840 8345 10136 12298 14864 17947 21592 25948 31088 37199 44388 52902 62888 74667 88450 104643 123542 145676 171438 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6841 8347 10139 12303 14871 17958 21607 25970 31118 37241 44444 52979 62989 74802 88626 104874 123839 146061 171928 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8348 10141 12306 14876 17965 21618 25985 31140 37271 44486 53035 63066 74903 88761 105050 124070 146358 172313 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10142 12308 14879 17970 21625 25996 31155 37293 44516 53077 63122 74980 88862 105185 124246 146589 172610 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12309 14881 17973 21630 26003 31166 37308 44538 53107 63164 75036 88939 105286 124381 146765 172841 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12310 14882 17975 21633 26008 31173 37319 44553 53129 63194 75078 88995 105363 124482 146900 173017 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12310 14883 17976 21635 26011 31178 37326 44564 53144 63216 75108 89037 105419 124559 147001 173152 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12310 14883 17977 21636 26013 31181 37331 44571 53155 63231 75130 89067 105461 124615 147078 173253 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12310 14883 17977 21637 26014 31183 37334 44576 53162 63242 75145 89089 105491 124657 147134 173330 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12310 14883 17977 21637 26015 31184 37336 44579 53167 63249 75156 89104 105513 124687 147176 173386 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12310 14883 17977 21637 26015 31185 37337 44581 53170 63254 75163 89115 105528 124709 147206 173428 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12310 14883 17977 21637 26015 31185 37338 44582 53172 63257 75168 89122 105539 124724 147228 173458 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12310 14883 17977 21637 26015 31185 37338 44583 53173 63259 75171 89127 105546 124735 147243 173480 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12310 14883 17977 21637 26015 31185 37338 44583 53174 63260 75173 89130 105551 124742 147254 173495 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12310 14883 17977 21637 26015 31185 37338 44583 53174 63261 75174 89132 105554 124747 147261 173506 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12310 14883 17977 21637 26015 31185 37338 44583 53174 63261 75175 89133 105556 124750 147266 173513 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12310 14883 17977 21637 26015 31185 37338 44583 53174 63261 75175 89134 105557 124752 147269 173518 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12310 14883 17977 21637 26015 31185 37338 44583 53174 63261 75175 89134 105558 124753 147271 173521 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12310 14883 17977 21637 26015 31185 37338 44583 53174 63261 75175 89134 105558 124754 147272 173523 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12310 14883 17977 21637 26015 31185 37338 44583 53174 63261 75175 89134 105558 124754 147273 173524 1 1 2 3 5 7 11 15 22 30 42 56 77 101 135 176 231 297 385 490 627 792 1002 1255 1575 1958 2436 3010 3718 4565 5604 6842 8349 10143 12310 14883 17977 21637 26015 31185 37338 44583 53174 63261 75175 89134 105558 124754 147273 173525";
	String[] tablea = table.split(" ");
	for (int i = 0; i < 50 && i < n; i++)
	    for (int j = 0; j < 50 && j < m; j++)
	    {
		vst[i][j] = true;
		memo[i][j] = Integer.parseInt(tablea[i * 50 + j]);
	    }
	for (int i = 0; i < n; i += 100)
	    for (int j = 0; j < m; j += 100)
		dp(i, j);

	int res = dp(n, m);
	// out = new PrintWriter("c:\\out.txt");
	// for (int i = 0; i < 50; i++)
	// for (int j = 0; j < 50; j++)
	// out.print(dp(i, j) + " ");
	// out.flush();
	System.out.println(res);
    }

    public static int dp(int cn, int cm)
    {
	if (vst[cn][cm])
	    return memo[cn][cm];
	vst[cn][cm] = true;
	if (cn == 0)
	{
	    if (cm > 0)
		return memo[cn][cm] = 0;
	    return memo[cn][cm] = 1;
	}
	if (cm == 0)
	    return memo[cn][cm] = 1;

	long re = 0;
	re += dp(cn - 1, cm);
	if (cm >= cn)
	{
	    re += dp(cn, cm - cn);
	}
	re %= 1000000007;
	memo[cn][cm] = (int) re;
	return (int) re;
    }
}
